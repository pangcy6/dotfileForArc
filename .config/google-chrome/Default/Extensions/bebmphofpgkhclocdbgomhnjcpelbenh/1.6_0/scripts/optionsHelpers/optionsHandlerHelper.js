class SettingsHandlers{constructor(t){this.context=t,this.bindMethods()}bindMethods(){this.handleLanguageAdding=this.handleLanguageAdding.bind(this),this.deleteSelectedLanguage=this.deleteSelectedLanguage.bind(this)}_isLanguageAlreadyAdded(t){const{languagesList:e}=this.context.storage;return e.some((e=>e.shortName===t))}_getLanguageFullName(t){let e=null;return LANGUAGES.forEach((a=>{a.short===t&&(e=a.international)})),e}_isLanguagesListFull(){const{languagesList:t}=this.context.storage;return!(t.length<this.context.MAX_LANGUAGES_AMOUNT)}handleLanguageAdding(t){if(this._isLanguageAlreadyAdded(t))return;const e={shortName:t,fullName:this._getLanguageFullName(t)},{languagesList:a}=this.context.storage;if(this._isLanguagesListFull(t))return a[0]=e,void this.context.saveToStorage({languagesList:a},(()=>{this.context.storage.languagesList=a,this.context.translate.loadTranslateLanguages()}));a.push(e),this.context.saveToStorage({languagesList:a},(()=>{this.context.storage.languagesList=a,this.context.translate.loadTranslateLanguages()}))}deleteSelectedLanguage(t){const e=t.currentTarget.closest("li"),a=e.dataset.short;let{languagesList:s}=this.context.storage;s=s.filter((t=>t.shortName!==a)),this.context.storage.languagesList=s,this.context.saveToStorage({languagesList:s},(()=>e.remove()))}}